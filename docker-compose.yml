version: "3"
services:
  docker-host:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    mem_limit: 8M
    restart: on-failure
  zmq:
    image: cagataygurturk/docker-ssh-tunnel
    volumes:
      - $HOME/.ssh:/root/ssh:ro
    environment:
      SSH_DEBUG: "-v"
      # TUNNEL_HOST: bchn-mainnet
      # REMOTE_HOST: ec2-13-251-63-215.ap-southeast-1.compute.amazonaws.com
      TUNNEL_HOST: bchn-chipnet
      REMOTE_HOST: ec2-18-138-226-25.ap-southeast-1.compute.amazonaws.com
      LOCAL_PORT: 28332
      REMOTE_PORT: 28332
  fulcrum:
    image: cagataygurturk/docker-ssh-tunnel
    volumes:
      - $HOME/.ssh:/root/ssh:ro
    environment:
      SSH_DEBUG: "-v"
      # TUNNEL_HOST: bchn-mainnet
      # REMOTE_HOST: ec2-13-251-63-215.ap-southeast-1.compute.amazonaws.com
      TUNNEL_HOST: bchn-chipnet
      REMOTE_HOST: ec2-18-138-226-25.ap-southeast-1.compute.amazonaws.com
      LOCAL_PORT: 60001
      REMOTE_PORT: 60001
  bchn:
    image: cagataygurturk/docker-ssh-tunnel
    volumes:
      - $HOME/.ssh:/root/ssh:ro
    environment:
      SSH_DEBUG: "-v"
      # TUNNEL_HOST: bchn-mainnet
      # REMOTE_HOST: ec2-13-251-63-215.ap-southeast-1.compute.amazonaws.com
      TUNNEL_HOST: bchn-chipnet
      REMOTE_HOST: ec2-18-138-226-25.ap-southeast-1.compute.amazonaws.com
      LOCAL_PORT: 8332
      REMOTE_PORT: 8332
  postgres:
    image: "postgres:11.1-alpine"
    volumes:
      - watchtower_db_data:/var/lib/postgresql/data
    env_file:
      - .env_dev
    expose:
      - "5432"
  redis:
    image: "redis:alpine"
    env_file:
      - .env_dev
  backend:
    build: .
    command: [ "supervisord", "-c", "/code/supervisor/webserver.conf", "--nodaemon" ]
    ports:
      - "8000:8000"
    env_file:
      - .env_dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/code
      - /code/anyhedge/js/node_modules
      - /code/rampp2p/js/node_modules
      - /code/cts/js/node_modules
      - /code/vouchers/js/node_modules
      - /code/stablehedge/js/node_modules
volumes:
  watchtower_db_data:
    # external: true
    driver: 'local'
