# Generated by Django 3.0.14 on 2024-11-25 11:02

from django.db import migrations
from django.db.models import Q
from django.apps import apps
from rampp2p.utils import satoshi_to_bch, bch_to_fiat
from rampp2p.models import PriceType

import logging
logger = logging.getLogger(__name__)

def get_price(ad):
    if ad.price_type == PriceType.FIXED:
        return ad.fixed_price
    
    MarketPrice = apps.get_model('rampp2p', 'MarketPrice')
    market_price = MarketPrice.objects.filter(currency=ad.fiat_currency.symbol).first()
    if market_price:
        market_price = market_price.price
        return market_price * (ad.floating_price/100)
    return None

def trade_amount_in_fiat_if_trade_limits_in_fiat(apps, schema_editor):
    Ad = apps.get_model('rampp2p', 'Ad')
    ads = Ad.objects.filter(Q(deleted_at__isnull=True) & Q(trade_limits_in_fiat=True) & Q(trade_amount_in_fiat=False))

    for ad in ads:
        if ad.trade_amount_sats:
            ad.trade_amount_in_fiat = True
            ad.trade_amount_fiat = bch_to_fiat(satoshi_to_bch(ad.trade_amount_sats), get_price(ad))
            ad.save()

            logger.warning(f'Updated Ad#{ad.id} | trade_amount: {ad.trade_amount_fiat}')

class Migration(migrations.Migration):

    dependencies = [
        ('rampp2p', '0217_init_empty_trade_limit_fiat_20241125_0959'),
    ]

    operations = [
        migrations.RunPython(trade_amount_in_fiat_if_trade_limits_in_fiat)
    ]
